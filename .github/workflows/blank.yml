name: Simple Single-Repo Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g. 0.0.2)'
        required: true
      phase:
        description: '“pre” or “post”'
        required: true

  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  ##############################################################################
  # PRE-RELEASE: create release/<version> branch + draft release “v<version>”
  ##############################################################################
  pre-release:
    if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.phase == 'pre' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout develop branch
        uses: actions/checkout@v3
        with:
          ref: develop
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify & create release/${{ github.event.inputs.version }} branch
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const version = "${{ github.event.inputs.version }}";
            const newBranch = `release/${version}`;
            const { owner, repo } = context.repo;

            try {
              await github.rest.git.getRef({ owner, repo, ref: `heads/${newBranch}` });
              core.setFailed(`Branch '${newBranch}' already exists.`);
              return;
            } catch (err) {
              if (err.status !== 404) throw err;
            }

            const { data: developRef } = await github.rest.git.getRef({
              owner,
              repo,
              ref: "heads/develop"
            });
            const developSha = developRef.object.sha;

            await github.rest.git.createRef({
              owner,
              repo,
              ref: `refs/heads/${newBranch}`,
              sha: developSha
            });
            console.log(`✅ Created branch 'release/${version}' from develop.`);

      - name: Create draft release v${{ github.event.inputs.version }}
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const version = "${{ github.event.inputs.version }}";
            const tagName = `v${version}`;
            const { owner, repo } = context.repo;

            try {
              await github.rest.repos.getReleaseByTag({ owner, repo, tag: tagName });
              core.setFailed(`Release with tag '${tagName}' already exists.`);
              return;
            } catch (err) {
              if (err.status !== 404) throw err;
            }

            await github.rest.repos.createRelease({
              owner,
              repo,
              tag_name: tagName,
              name: `Draft: v${version}`,
              draft: true,
              prerelease: false
            });
            console.log(`✅ Created draft release '${tagName}'.`);
